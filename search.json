[{"path":"https://nelstevens.github.io/daphniaRuler/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Nelson Stevens Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nelstevens.github.io/daphniaRuler/articles/installation_issues.html","id":"how-to-install","dir":"Articles","previous_headings":"","what":"How to install","title":"Installation issues","text":"command installs package. Issues installation process can occur daphniaruler requires python Anaconda (miniconda) installed system.","code":"remotes::install_github(\"nelstevens/daphniaRuler\")"},{"path":"https://nelstevens.github.io/daphniaRuler/articles/installation_issues.html","id":"solve-installation-issues","dir":"Articles","previous_headings":"","what":"Solve installation issues","title":"Installation issues","text":"installing package loading might encounter following error: Error: package namespace load failed ‘daphniaruler’: .onLoad failed loadNamespace() ‘daphniaruler’, details: call: NULL error: Unable find conda binary. Anaconda installed? error occurs Anaconda (miniconda) /python installed system. fix :","code":"install.packages(\"reticulate\") reticulate::use_miniconda()"},{"path":"https://nelstevens.github.io/daphniaRuler/articles/installation_issues.html","id":"other-issues","dir":"Articles","previous_headings":"","what":"Other issues","title":"Installation issues","text":"page didn’t help installation process experience issues using daphniaruler please open issue Github. contribution appreciated :)","code":""},{"path":"https://nelstevens.github.io/daphniaRuler/articles/measure_single_image.html","id":"load-the-package","dir":"Articles","previous_headings":"","what":"1. Load the package","title":"Measure single images","text":"error messages loading package. case experience issues see:https://nelstevens.github.io/daphniaRuler/articles/installation_issues.html","code":"library(daphniaruler) #> Trying to find python and conda #> Trying to find conda environment 'daphniaRuler' #> Activating conda environment 'daphniaruler' #> done... have fun"},{"path":"https://nelstevens.github.io/daphniaRuler/articles/measure_single_image.html","id":"run-measure_image","dir":"Articles","previous_headings":"","what":"2. run measure_image","title":"Measure single images","text":"Run function measure_image. function requires single argument, path image. path can either absolute relative. function also comes three optional arguments: find_eye plot_image scaling_factor find_eye expects logical value (either TRUE FALSE). TRUE package try detect eye daphnia within image. successful measurement eye base tail additionally line base tail tip tail. accurate way measure body size daphnia. plot_image also expects logical value (either TRUE FALSE). TRUE function create plot image measurements plotted image. Note feature might work using rstudio. scaling_factor expect numeric input. describes many pixels occur one unit length. example 100 pixels correspond 1mm scaling_factor 100. can calculate scaling factor image analysis tools imageJ. scaling_factor NULL measurement outputs correspond pixels (scaling performed). ’s example function produces optional arguments set default values (’m disabling output image array due space constraints):","code":"out <- measure_image(   \"../inst/sample_images/example1.JPG\",   find_eye = TRUE,   plot_image = TRUE,   scaling_factor = NULL   ) out[names(out) != \"image\"] #> $ID #> [1] \"sample_images/example1.JPG\" #>  #> $perimeter #> [1] 1038.189 #>  #> $area #> [1] 65656.89 #>  #> $minor #> [1] 207.7907 #>  #> $solidity #> [1] 0.9870644 #>  #> $full.Length #> [1] 406.9933 #>  #> $tail.Length #> [1] 124.5079 #>  #> $eye.Length #> [1] 354.1952 #>  #> $tail.angle #> [1] 159.6364"},{"path":"https://nelstevens.github.io/daphniaRuler/articles/measure_single_image.html","id":"what-should-the-image-look-like","dir":"Articles","previous_headings":"","what":"What should the image look like","title":"Measure single images","text":"image ideally contains single individual. individuals also present image largest individual measured. optimal results try make image sharp possible. Especially outline specimen clearly visible.","code":""},{"path":"https://nelstevens.github.io/daphniaRuler/articles/measure_single_image.html","id":"note-on-output-images","dir":"Articles","previous_headings":"","what":"Note on output images","title":"Measure single images","text":"Output images measurements plotted rescaled 720*480p order save memory. However measurement outputs scaling_factor = NULL correspond pixels original image. Thus measuring drawn lines output images image analysis tool imageJ show differing results.","code":""},{"path":"https://nelstevens.github.io/daphniaRuler/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nelson Stevens. Maintainer.","code":""},{"path":"https://nelstevens.github.io/daphniaRuler/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stevens N (2023). daphniaruler: Measure morphometric traits zooplankton images. R package version 0.1.0, https://nelstevens.github.io/daphniaRuler.","code":"@Manual{,   title = {daphniaruler: Measure morphometric traits of zooplankton from images},   author = {Nelson Stevens},   year = {2023},   note = {R package version 0.1.0},   url = {https://nelstevens.github.io/daphniaRuler}, }"},{"path":"https://nelstevens.github.io/daphniaRuler/index.html","id":"daphniaruler-","dir":"","previous_headings":"","what":"Measure morphometric traits of zooplankton from images","title":"Measure morphometric traits of zooplankton from images","text":"Automatically collect morphometric traits Daphnia zooplankton species leveraging python. Simply take images individual specimen point daphniaruler towards single image directory images.","code":""},{"path":"https://nelstevens.github.io/daphniaRuler/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Measure morphometric traits of zooplankton from images","text":"can install daphnia ruler via github using remotes: experience issues installation see: https://nelstevens.github.io/daphniaRuler/articles/installation_issues.html ## Usage detailed usage see: https://nelstevens.github.io/daphniaRuler/","code":"remotes::install_github(\"nelstevens/daphniaRuler\")"},{"path":"https://nelstevens.github.io/daphniaRuler/index.html","id":"measure-single-images","dir":"","previous_headings":"Installation","what":"Measure single images:","title":"Measure morphometric traits of zooplankton from images","text":"daphniaruler output list measured traits plot measurements image. details see: https://nelstevens.github.io/daphniaRuler/articles/measure_single_image.html","code":"library(daphniaruler) measure_image(\"path/to/image\")"},{"path":"https://nelstevens.github.io/daphniaRuler/index.html","id":"measure-a-directory","dir":"","previous_headings":"Installation","what":"Measure a directory:","title":"Measure morphometric traits of zooplankton from images","text":"daphniaruler create csv file containing measured images within directory. Optionally copies images results plotted can saved disk.","code":"library(daphniaruler) measure_directory(\"path/to/directory\")"},{"path":"https://nelstevens.github.io/daphniaRuler/reference/measure_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"measure all images in a directory — measure_directory","title":"measure all images in a directory — measure_directory","text":"measure images directory","code":""},{"path":"https://nelstevens.github.io/daphniaRuler/reference/measure_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"measure all images in a directory — measure_directory","text":"","code":"measure_directory(   path,   write_images = TRUE,   eye_method = TRUE,   scaling_factor = FALSE )"},{"path":"https://nelstevens.github.io/daphniaRuler/reference/measure_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"measure all images in a directory — measure_directory","text":"path path directory. string. See Details info. write_images write images png? boolean eye_method use eye method possible? boolean scaling_factor scale measurements unit. boolean. See Details info","code":""},{"path":"https://nelstevens.github.io/daphniaRuler/reference/measure_directory.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"measure all images in a directory — measure_directory","text":"path must contain images either png jpg format. note subdirectories ignored (recursive). scaling_factor describes many pixels occur one unit. editme!","code":""},{"path":"https://nelstevens.github.io/daphniaRuler/reference/measure_directory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"measure all images in a directory — measure_directory","text":"","code":"if (FALSE) { measure_directory(\"path/to/directory\") # scale images to other unit measure_directory(\"path/to/directory\", scaling_factor = FALSE) }"},{"path":"https://nelstevens.github.io/daphniaRuler/reference/measure_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Measure morphometric traits of a single image — measure_image","title":"Measure morphometric traits of a single image — measure_image","text":"Measure morphometric traits single image","code":""},{"path":"https://nelstevens.github.io/daphniaRuler/reference/measure_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure morphometric traits of a single image — measure_image","text":"","code":"measure_image(path, find_eye = TRUE, plot_image = TRUE, scaling_factor = NULL)"},{"path":"https://nelstevens.github.io/daphniaRuler/reference/measure_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure morphometric traits of a single image — measure_image","text":"path path image either absolute relative. string. See Details info. find_eye try find eye daphnia? eye found automatically falls back outline measurement. boolean plot_image whether plot resulting image. boolean scaling_factor scale measurements unit. numeric. See Details info","code":""},{"path":"https://nelstevens.github.io/daphniaRuler/reference/measure_image.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Measure morphometric traits of a single image — measure_image","text":"Currently png jpg formats allowed input images. scaling_factor describes many pixels occur one unit. example one mm corresponds 100 pixels scaling factor 100. can calculate scaling factor taking images graticule ans see many pixels unit length image analysis tool imageJ.","code":""},{"path":"https://nelstevens.github.io/daphniaRuler/reference/measure_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measure morphometric traits of a single image — measure_image","text":"","code":"if (FALSE) { measure_image(\"path/to/image\") # scale images to other unit measure_image(\"path/to/image\", scaling_factor = 134) }"}]
