[{"path":"https://nelstevens.github.io/daphniaRuler/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Nelson Stevens Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nelstevens.github.io/daphniaRuler/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nelson Stevens. Maintainer.","code":""},{"path":"https://nelstevens.github.io/daphniaRuler/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stevens N (2022). daphniaruler: Measure morphometric traits zooplankton images.. R package version 0.1.0, https://nelstevens.github.io/daphniaRuler.","code":"@Manual{,   title = {daphniaruler: Measure morphometric traits of zooplankton from images.},   author = {Nelson Stevens},   year = {2022},   note = {R package version 0.1.0},   url = {https://nelstevens.github.io/daphniaRuler}, }"},{"path":"https://nelstevens.github.io/daphniaRuler/index.html","id":"daphniaruler","dir":"","previous_headings":"","what":"Measure morphometric traits of zooplankton from images.","title":"Measure morphometric traits of zooplankton from images.","text":"Automatically collect morphometric traits Daphnia zooplankton species leveraging python. Simply take images individual specimen point daphniaruler towards single image directory images.","code":""},{"path":"https://nelstevens.github.io/daphniaRuler/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Measure morphometric traits of zooplankton from images.","text":"can install daphnia ruler via github using remotes:","code":"remotes::install_github(\"nelstevens/daphniaRuler\")"},{"path":"https://nelstevens.github.io/daphniaRuler/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Measure morphometric traits of zooplankton from images.","text":"detailed usage see: https://nelstevens.github.io/daphniaRuler/","code":""},{"path":"https://nelstevens.github.io/daphniaRuler/index.html","id":"measure-single-images","dir":"","previous_headings":"Usage","what":"Measure single images:","title":"Measure morphometric traits of zooplankton from images.","text":"daphniaruler output list measured traits plot measurements image.","code":"library(daphniaruler) measure_image(\"path/to/image\")"},{"path":[]},{"path":"https://nelstevens.github.io/daphniaRuler/reference/measure_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Measure morphometric traits of a single image — measure_image","title":"Measure morphometric traits of a single image — measure_image","text":"Measure morphometric traits single image","code":""},{"path":"https://nelstevens.github.io/daphniaRuler/reference/measure_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure morphometric traits of a single image — measure_image","text":"","code":"measure_image(   path = system.file(\"inst/sample_images/example1.JPG\", package = \"daphniaruler\"),   find_eye = TRUE,   plot_image = TRUE )"},{"path":"https://nelstevens.github.io/daphniaRuler/reference/measure_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure morphometric traits of a single image — measure_image","text":"path path image either absolute relative find_eye try find eye daphnia? eye found automatically falls back outline measurement. boolean plot_image whether plot resulting image. boolean","code":""},{"path":"https://nelstevens.github.io/daphniaRuler/reference/measure_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measure morphometric traits of a single image — measure_image","text":"","code":"if (FALSE) { measure_image(\"path/to/image\") }"}]
